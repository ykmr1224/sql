name: Security Plugin IT

on:
  pull_request:
  push:
    branches-ignore:
      - 'backport/**'
      - 'dependabot/**'
    paths:
      - 'integ-test/**'
      - '.github/workflows/integ-tests-with-security.yml'

jobs:
  Get-CI-Image-Tag:
    uses: opensearch-project/opensearch-build/.github/workflows/get-ci-image-tag.yml@main
    with:
      product: opensearch

  security-it-linux:
    needs: Get-CI-Image-Tag
    strategy:
      fail-fast: false
      matrix:
        java: [21, 24]
    runs-on: ubuntu-latest
    container:
      # using the same image which is used by opensearch-build team to build the OpenSearch Distribution
      # this image tag is subject to change as more dependencies and updates will arrive over time
      image: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }}
      options: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-options }}

    steps:
    - name: Run start commands
      run: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-start-command }}
      
    - uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}

    - name: Build with Gradle
      run: |
        chown -R 1000:1000 `pwd`
        su `id -un 1000` -c "./gradlew integTestWithSecurity"

    - name: Upload test reports
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: test-reports-${{ matrix.os }}-${{ matrix.java }}
        path: |
          integ-test/build/reports/**
          integ-test/build/testclusters/*/logs/*
          integ-test/build/testclusters/*/config/*

  security-it-windows-macos:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-13 ]
        java: [21, 24]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}

    - name: Build with Gradle
      run: ./gradlew integTestWithSecurity

    - name: Upload test reports
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: test-reports-${{ matrix.os }}-${{ matrix.java }}
        path: |
          integ-test/build/reports/**
          integ-test/build/testclusters/*/logs/*
          integ-test/build/testclusters/*/config/*

  publish-html-reports:
    needs:
      - security-it-linux
      - security-it-windows-macos
    runs-on: ubuntu-latest
    steps:
      # 👇 generate an index.html that links every folder/file
      - name: Generate directory listing
        uses: jayanta525/github-pages-directory-listing@v4.0.0
        with:
          FOLDER: site

      # Download artifacts from the previous job
      - name: Download HTML Report Artifacts
        uses: actions/download-artifact@v4
        with:
          name: html-reports-${{ github.run_id }}
          path: downloaded-artifacts

      # Collect all HTML reports from artifacts and workspace
      - name: Collect HTML reports
        run: |
          mkdir -p site
          find downloaded-artifacts -type f -name "*.html" -exec cp --parents \{\} site/ \;
          find downloaded-artifacts -type f -name "*.xml" -exec cp --parents \{\} site/ \;
          find downloaded-artifacts -type f -name "*.log" -exec cp --parents \{\} site/ \;
          find downloaded-artifacts -type f -name "*.txt" -exec cp --parents \{\} site/ \;
          find downloaded-artifacts -type f -name "*.json" -exec cp --parents \{\} site/ \;
          find downloaded-artifacts -type f -name "*.png" -exec cp --parents \{\} site/ \;
          find downloaded-artifacts -type f -name "*.svg" -exec cp --parents \{\} site/ \;
          # Also include any HTML reports generated in the current workflow run
          find . -type f -name "*.html" -exec cp --parents \{\} site/ \;
          find . -type f -name "*.xml" -exec cp --parents \{\} site/ \;
          find . -type f -name "*.log" -exec cp --parents \{\} site/ \;
          find . -type f -name "*.txt" -exec cp --parents \{\} site/ \;
          find . -type f -name "*.json" -exec cp --parents \{\} site/ \;
          find . -type f -name "*.png" -exec cp --parents \{\} site/ \;
          find . -type f -name "*.svg" -exec cp --parents \{\} site/ \;

          echo "Collected HTML reports and related files into 'site' directory."

      # Publish to gh-pages using the industry-standard action
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: site
          destination_dir: ${{ github.run_number }}-${{ github.sha }}
          keep_files: true

      # Add a clickable link in the run summary
      - name: Summary
        run: |
          SHORT_COMMIT="${{ github.sha }}"
          SHORT_COMMIT="${SHORT_COMMIT:0:8}"
          URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.run_number }}-${{ github.sha }}/"
          
          {
            echo "### 📊 HTML Reports Published"
            echo ""
            echo "- **📋 Dashboard:** [$URL]($URL)"
            echo "- **🔍 Revision:** ${SHORT_COMMIT}"
            echo "- **🌿 Branch:** ${{ github.head_ref || github.ref_name }}"
            echo "- **📅 Generated:** $(date -u)"
            echo ""
            echo "The dashboard automatically lists all HTML files found in build directories."
            echo ""
            echo "**Search Locations:**"
            echo "- \`*/build/reports/**/*.html\`"
            echo "- \`*/build/test-results/**/*.html\`"
            echo "- \`*/target/surefire-reports/*.html\`"
            echo "- \`*/target/site/**/*.html\`"
            echo "- \`**/coverage/**/*.html\`"
            echo "- \`**/jacoco/**/*.html\`"
          } >> "$GITHUB_STEP_SUMMARY"
